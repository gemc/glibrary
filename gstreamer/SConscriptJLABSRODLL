# The environment is not passed here, checking for root library
from init_env import init_environment
import os





env = init_environment('glibrary geant4 clhep')





env.Append(CXXFLAGS=['-std=c++20'])
env.Append(CPPPATH = [Dir('factories/JLABSRO')])

# needed for the plugin so we can use install_name_tool to change path for DMG installation
env.Append(SHLINKFLAGS=['-headerpad_max_install_names'])

jsroSources = [
				  'factories/JLABSRO/gstreamerJLABSROFactory.cc',
				  'factories/JLABSRO/gstreamerJLABSROConnection.cc',
				  'factories/JLABSRO/stream/stream.cc',
				  'factories/JLABSRO/stream/frameHeader.cc',
				  'factories/JLABSRO/stream/publishPayload.cc'
				  ]


# standard pre and suffix for gemc plugins
env.Replace(SHLIBSUFFIX = ".gplugin")
env.Replace(SHLIBPREFIX = "")

# notice: these two libraries needs to be added explicitly, with also the dependency below,
# as the env scanner may run at a time where the libraries are not built yet
env.Append(LIBS = ['gdata', 'guts'])

# destination library is one dir up - relative to this SConscript
jsro_dll = env.SharedLibrary(source = jsroSources, target='../lib/gstreamerJLABSROFactory')
Depends(jsro_dll, '../lib/libgdata.a')
