#!/bin/zsh


function replaceLineInFileContaining () {
	filename=$1
	lineContent=$2
	lineReplacing=$3

	header=$(grep -v '#' $filename | grep -B1000 $lineContent | grep -v $lineContent | grep -v '\-\-')
	footer=$(grep -v '#' $filename | grep -A1000 $lineContent | grep -v $lineContent | grep -v '\-\-')

	rm -f tmpFile

#	echo header
#	echo $header
#	echo
#	echo lineReplacing
#	echo $lineReplacing
#	echo
#	echo footer
#	echo $footer
#	echo

	echo $header         > tmpFile
	echo $lineReplacing >> tmpFile
	echo $footer        >> tmpFile

	echo Filename: $filename
	echo Content of line to replace: $lineContent
	echo Line replacing the content: $lineReplacing

	mv tmpFile $filename
}


# Purpose: creates a doxyfile using the doxygen -g command to get the latest doxygen goodies)
# The replace each line with the ones shown below

typeset -A doxyChanges


doxyChanges[PROJECT_NAME]='"templateGLibrary"'
doxyChanges[PROJECT_NUMBER]="1.0"
doxyChanges[OPTIMIZE_OUTPUT_FOR_C]='YES'
doxyChanges[BUILTIN_STL_SUPPORT]='YES'
doxyChanges[PROJECT_BRIEF]='"templateGLibrary Library Framework"'
doxyChanges[QUIET]='YES'
doxyChanges[RECURSIVE]='YES'
doxyChanges[EXCLUDE]='"README.md \ .git \ example.cc \ json.hpp"'
doxyChanges[EXCLUDE_PATTERNS]='"*moc* \ */html/*"'
doxyChanges[SOURCE_BROWSER]='YES'
doxyChanges[HTML_TIMESTAMP]='YES'
doxyChanges[HTML_DYNAMIC_SECTIONS]='YES'
doxyChanges[GENERATE_LATEX]='NO'
doxyChanges[HIDE_UNDOC_RELATIONS]='NO'
doxyChanges[HAVE_DOT]='YES'
doxyChanges[UML_LOOK]='YES'
doxyChanges[UML_LIMIT_NUM_FIELDS]='0'
doxyChanges[DOT_FONTSIZE]='12'
doxyChanges[CLASS_GRAPH]='YES'
doxyChanges[GENERATE_LEGEND]='NO'




echo " "
echo " Creating Doxyfile "
doxygen -g
rm -f DoxyfilePure
grep -v '#' Doxyfile | grep -v '\-\-' | grep -i "\S" > DoxyfilePure


for key val in ${(kv)doxyChanges}; do
	toReplace="$key"
	replacing="$key \t= $val"
	file="Doxyfile"

	replaceLineInFileContaining $file $toReplace $replacing
	echo
done

grep -i "\S" Doxyfile > tmpFile
mv tmpFile Doxyfile

echo
echo Differences:

diff Doxyfile DoxyfilePure
